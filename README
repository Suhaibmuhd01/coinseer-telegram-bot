CoinSeer Telegram Bot
 
CoinSeer is a powerful and user-friendly Telegram bot designed to help cryptocurrency enthusiasts track prices, set alerts, manage portfolios, and stay updated with the latest crypto news. Built with Python, it leverages the CoinGecko API for real-time market data, NewsAPI for crypto news, and a robust SQLite database for persistent user data. Whether you're a trader, investor, or crypto curious, CoinSeer has you covered!
üöÄ Features

Real-Time Price Tracking: Get current prices for any cryptocurrency (e.g., /price BTC).
Price Alerts: Set custom alerts for price thresholds (e.g., /alert to notify when BTC goes above $70,000).
Portfolio Management: Track your holdings and their value (e.g., /portfolio_add BTC 0.5).
Price Charts: View text-based price history charts (e.g., /chart ETH 7 for 7-day data).
Crypto News: Stay informed with the latest news from trusted sources (e.g., /news bitcoin).
Watchlist: Monitor favorite coins with quick price updates (e.g., /watchlist_add ETH).
Market Insights: Access detailed metrics like market cap and volume (e.g., /market BTC).
Top Movers: See the top 5 gainers and losers daily (e.g., /topmovers).
Fear & Greed Index: Check market sentiment (e.g., /fear_greed).
Mock Predictions: Get a fun, simulated price prediction (e.g., /predict BTC).
Custom Currency: Set preferred fiat currency (e.g., /settings to choose USD, EUR, etc.).
Interactive Menus: Use inline keyboards for easy navigation.
Secure & Scalable: Robust error handling, input sanitization, and efficient API usage.

üõ†Ô∏è Installation
Follow these steps to set up and run CoinSeer locally or on a server.
Prerequisites

Python 3.8+
Telegram account and bot token (from BotFather)
NewsAPI key (from NewsAPI.org)
Git (optional, for cloning)

Setup Instructions

Clone the Repository:
git clone https://github.com/Suhaibmuhd01/coinseer-telegram-bot.git
cd coinseer-telegram-bot


Create a Virtual Environment:
python -m venv venv
source venv/bin/activate  # Linux/Mac
venv\Scripts\activate     # Windows


Install Dependencies:
pip install -r requirements.txt


Configure Environment Variables:

Create a .env file in the project root:touch .env


Add your Telegram bot token and NewsAPI key:TELEGRAM_BOT_TOKEN=your_bot_token
NEWS_API_KEY=your_newsapi_key




Initialize the Database:

The database (coinseer_bot.db) is created automatically on first run.
To manually initialize:python -c "import database; database.init_db()"




Run the Bot:
python main.py


The bot will start polling Telegram and checking price alerts every minute.


Test the Bot:

Open Telegram, find your bot (e.g., @CoinSeer), and send /start or / to explore commands.
Test features like /price BTC, /alert, /portfolio, and /news.



üì° Deployment
To host CoinSeer publicly (e.g., on Heroku, Render, or AWS):

Push the code to your GitHub repository‚Äôs main branch:git checkout main
git add .
git commit -m "Deploy CoinSeer bot"
git push origin main


Deploy to a platform:
Heroku:
Create a new app, connect to GitHub, and deploy the main branch.
Set environment variables (TELEGRAM_BOT_TOKEN, NEWS_API_KEY) in Heroku settings.
Enable a dyno to run python main.py.


Render:
Create a new web service, link to your GitHub repo, and set the start command to python main.py.
Add environment variables in the Render dashboard.


Ensure the platform supports SQLite (or switch to PostgreSQL for production).


Monitor logs for errors and test the bot on Telegram.

üñ•Ô∏è Usage

Start: /start or / to see the welcome message and command list.
Commands:
/price BTC - Get Bitcoin‚Äôs current price.
/alert - Set a price alert with interactive prompts.
/portfolio_add BTC 0.5 - Add 0.5 BTC to your portfolio.
/chart ETH 7 - View Ethereum‚Äôs 7-day price chart.
/news bitcoin - Get the latest Bitcoin news.
/topmovers - See top market movers.
/settings - Choose your preferred currency (USD, EUR, etc.).


Use /help for a full command list.

üõ°Ô∏è Security

Input Sanitization: Prevents injection attacks.
Environment Variables: Keeps API keys secure.
Logging: Detailed logs in coinseer_bot.log for debugging without exposing sensitive data.
Database: SQLite with proper connection handling and constraints.

üìö Technologies

Python 3.8+: Core programming language.
python-telegram-bot: For Telegram API interaction.
CoinGecko API: For real-time crypto data.
NewsAPI: For crypto news.
APScheduler: For scheduling price alert checks.
SQLite: For persistent storage of user data.
python-dotenv: For secure configuration.

ü§ù Contributing
Contributions are welcome! To contribute:

Fork the repository.
Create a feature branch: git checkout -b feature/your-feature.
Commit changes: git commit -m "Add your feature".
Push to the branch: git push origin feature/your-feature.
Open a pull request.

üìú License
This project is licensed under the MIT License.
üôå Acknowledgments

Built by Suhaibmuhd01 for a faculty project.
Powered by CoinGecko, NewsAPI, and the Telegram Bot API.
Thanks to the open-source community for their amazing libraries!


üåü Try CoinSeer today and take control of your crypto journey! üåü
